{"ast":null,"code":"var _jsxFileName = \"/Users/oslavko/Documents/dev/merchantspring/coding-challenge/coding-challenge-ui/src/components/OrdersTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableList = styled.table`\n  width: 100%;\n  font-family: \"Roboto\", sans-serif;\n  text-align: left;\n  border-collapse: collapse;\n  th {\n    background-color: #f2f5f9;\n    color: #888888;\n    font-weight: light;\n    font-size: small;\n  }\n  td, th {\n    border: 1px solid #f0f0f0;\n    border-left: none;\n    border-right: none;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 20px;\n  }\n`;\n_c = StyledTableList;\nconst getFlagEmoji = country => {\n  switch (country) {\n    case \"AUS\":\n      return 'ðŸ‡¦ðŸ‡º';\n    case \"GBR\":\n      return 'ðŸ‡¬ðŸ‡§';\n    case \"USA\":\n      return 'ðŸ‡ºðŸ‡¸';\n    default:\n      return '';\n  }\n};\nconst Paginate = ({\n  totalPages\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Array.from({\n      length: totalPages\n    }).map((_item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: index + 1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 65\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Paginate;\nexport const OrdersTable = ({\n  orderItems,\n  itemsPerPage\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    if (orderItems) setTotalPages(Math.ceil(orderItems.length / itemsPerPage));\n  }, [itemsPerPage, orderItems]);\n  const startIndex = currentPage * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const subset = orderItems && orderItems.slice(startIndex, endIndex);\n  const handlePageChange = selectedPage => {\n    setCurrentPage(selectedPage.selected);\n  };\n  console.log(orderItems);\n  console.log(totalPages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTableList, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MARKETPLACE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ORDER ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ORDER VALUE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ITEMS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DESTINATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DAYS OVERDUE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: subset && subset.map(orderItem => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [getFlagEmoji(orderItem.storeCountry), \" \", orderItem.marketplace]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orderItem.storeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orderItem.orderId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Intl.NumberFormat('en-AU', {\n              style: 'currency',\n              currency: 'AUD'\n            }).format(Number(orderItem.orderValue))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orderItem.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orderItem.destination\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: orderItem.latest_ship_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, orderItem.Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      pageCount: totalPages,\n      onPageChange: handlePageChange,\n      forcePage: currentPage,\n      previousLabel: \"<<\",\n      nextLabel: \">>\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(OrdersTable, \"cxthYUPI+UsLNP3Fl8ayrlIflKo=\");\n_c3 = OrdersTable;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTableList\");\n$RefreshReg$(_c2, \"Paginate\");\n$RefreshReg$(_c3, \"OrdersTable\");","map":{"version":3,"names":["React","useEffect","useState","styled","ReactPaginate","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTableList","table","_c","getFlagEmoji","country","Paginate","totalPages","children","Array","from","length","map","_item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c2","OrdersTable","orderItems","itemsPerPage","_s","currentPage","setCurrentPage","setTotalPages","Math","ceil","startIndex","endIndex","subset","slice","handlePageChange","selectedPage","selected","console","log","orderItem","storeCountry","marketplace","storeName","orderId","Intl","NumberFormat","style","currency","format","Number","orderValue","items","destination","latest_ship_date","Id","breakLabel","pageCount","onPageChange","forcePage","previousLabel","nextLabel","renderOnZeroPageCount","_c3","$RefreshReg$"],"sources":["/Users/oslavko/Documents/dev/merchantspring/coding-challenge/coding-challenge-ui/src/components/OrdersTable.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Order } from \"./OverdueOrders\";\nimport ReactPaginate from \"react-paginate\";\n\nconst StyledTableList = styled.table`\n  width: 100%;\n  font-family: \"Roboto\", sans-serif;\n  text-align: left;\n  border-collapse: collapse;\n  th {\n    background-color: #f2f5f9;\n    color: #888888;\n    font-weight: light;\n    font-size: small;\n  }\n  td, th {\n    border: 1px solid #f0f0f0;\n    border-left: none;\n    border-right: none;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 20px;\n  }\n`;\n\ntype OrdersTableProps = {\n  orderItems: Order[] | null;\n  itemsPerPage: number;\n}\n\nconst getFlagEmoji = (country?: string): string => {\n  switch (country) {\n    case \"AUS\":\n      return 'ðŸ‡¦ðŸ‡º';\n    case \"GBR\":\n      return 'ðŸ‡¬ðŸ‡§';\n    case \"USA\":\n      return 'ðŸ‡ºðŸ‡¸';\n    default:\n      return '';\n  }\n};\n\ntype PaginateProps = {\n  totalPages: number;\n};\n\nconst Paginate = ({\n  totalPages,\n}: PaginateProps) => {\n  return (\n    <ul>\n      {Array.from({ length: totalPages }).map((_item, index) => <li key={index}>{index + 1}</li>)}\n    </ul>\n  );\n};\n\nexport const OrdersTable = ({ orderItems, itemsPerPage }: OrdersTableProps) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (orderItems) setTotalPages(Math.ceil(orderItems.length / itemsPerPage));\n  }, [itemsPerPage, orderItems]);\n\n  const startIndex = currentPage * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const subset = orderItems && orderItems.slice(startIndex, endIndex);\n\n  const handlePageChange = (selectedPage: any) => {\n    setCurrentPage(selectedPage.selected);\n  };\n\n  console.log(orderItems);\n  console.log(totalPages);\n\n  return (\n    <>\n      <StyledTableList>\n        <thead>\n          <tr>\n            <th>MARKETPLACE</th>\n            <th>STORE</th>\n            <th>ORDER ID</th>\n            <th>ORDER VALUE</th>\n            <th>ITEMS</th>\n            <th>DESTINATION</th>\n            <th>DAYS OVERDUE</th>\n          </tr>\n        </thead>\n        <tbody>\n          {subset && subset.map(orderItem => (\n            <tr key={orderItem.Id}>\n              <td>{getFlagEmoji(orderItem.storeCountry)} {orderItem.marketplace}</td>\n              <td>{orderItem.storeName}</td>\n              <td>{orderItem.orderId}</td>\n              <td>\n                {\n                  new Intl.NumberFormat(\n                    'en-AU',\n                    { style: 'currency', currency: 'AUD' }\n                  )\n                  .format(Number(orderItem.orderValue))\n                }\n              </td>\n              <td>{orderItem.items}</td>\n              <td>{orderItem.destination}</td>\n              <td>{orderItem.latest_ship_date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </StyledTableList>\n      <Paginate />\n      <ReactPaginate\n        breakLabel={\"...\"}\n        pageCount={totalPages}\n        onPageChange={handlePageChange}\n        forcePage={currentPage}\n        previousLabel={\"<<\"}\n        nextLabel={\">>\"}\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}